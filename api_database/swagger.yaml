openapi: 3.0.0
info:
  title: PCLFact API
  version: 1.0.0
  description: API para la administración de clientes, facturación, pedidos y más.
servers:
  - url: http://localhost:3000
    description: Servidor local de desarrollo
paths:
  /clients:
    get:
      summary: Obtener todos los clientes
      responses:
        '200':
          description: Lista de clientes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Client'
    post:
      summary: Crear un cliente
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
      responses:
        '201':
          description: Cliente creado
  /clients/{clientId}:
    get:
      summary: Obtener un cliente por ID
      parameters:
        - name: clientId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Cliente encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
    put:
      summary: Actualizar un cliente
      parameters:
        - name: clientId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
      responses:
        '200':
          description: Cliente actualizado
    delete:
      summary: Eliminar un cliente
      parameters:
        - name: clientId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Cliente eliminado

  /invoices:
    get:
      summary: Obtener todas las facturas
      responses:
        '200':
          description: Lista de facturas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Invoice'
    post:
      summary: Crear una factura
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invoice'
      responses:
        '201':
          description: Factura creada
  /invoices/{invoiceNumber}:
    get:
      summary: Obtener una factura por número
      parameters:
        - name: invoiceNumber
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Factura encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
    put:
      summary: Actualizar una factura
      parameters:
        - name: invoiceNumber
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invoice'
      responses:
        '200':
          description: Factura actualizada
    delete:
      summary: Eliminar una factura
      parameters:
        - name: invoiceNumber
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Factura eliminada

  /orders:
    get:
      summary: Obtener todos los pedidos
      responses:
        '200':
          description: Lista de pedidos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
    post:
      summary: Crear un pedido
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          description: Pedido creado
  /orders/{orderNumber}:
    get:
      summary: Obtener un pedido por número
      parameters:
        - name: orderNumber
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Pedido encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
    put:
      summary: Actualizar un pedido
      parameters:
        - name: orderNumber
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: Pedido actualizado
    delete:
      summary: Eliminar un pedido
      parameters:
        - name: orderNumber
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Pedido eliminado

  /products:
    get:
      summary: Obtener todos los productos
      responses:
        '200':
          description: Lista de productos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
    post:
      summary: Crear un producto
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          description: Producto creado
  /products/{productCode}:
    get:
      summary: Obtener un producto por código
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Producto encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
    put:
      summary: Actualizar un producto
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: Producto actualizado
    delete:
      summary: Eliminar un producto
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Producto eliminado

components:
  schemas:
    Client:
      type: object
      properties:
        clientId:
          type: string
        name:
          type: string
        contactPerson:
          type: string
        phone:
          type: string
        email:
          type: string
        address:
          type: string
        registrationDate:
          type: string
          format: date-time
    Invoice:
      type: object
      properties:
        invoiceNumber:
          type: string
        date:
          type: string
          format: date-time
        client:
          $ref: '#/components/schemas/Client'
        items:
          type: array
          items:
            type: object
            properties:
              product:
                type: string
              quantity:
                type: integer
              unitPrice:
                type: number
        totalAmount:
          type: number
        status:
          type: string
          enum: ['Paid', 'Unpaid', 'Overdue']
    Order:
      type: object
      properties:
        orderNumber:
          type: string
        date:
          type: string
          format: date-time
        client:
          $ref: '#/components/schemas/Client'
        items:
          type: array
          items:
            type: object
            properties:
              product:
                type: string
              quantity:
                type: integer
              unitPrice:
                type: number
        totalAmount:
          type: number
        status:
          type: string
          enum: ['Pending', 'Shipped', 'Delivered', 'Cancelled']
    Product:
      type: object
      properties:
        productCode:
          type: string
        name:
          type: string
        description:
          type: string
        category:
          type: string
        unitPrice:
          type: number
        stock:
          type: integer
        supplier:
          $ref: '#/components/schemas/Supplier'
    Supplier:
      type: object
      properties:
        name:
          type: string
        contactPerson:
          type: string
        phone:
          type: string
        email:
          type: string
        address:
          type: string
